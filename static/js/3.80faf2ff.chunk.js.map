{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","statusBar","onClick","statusBarText","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","contactsForm","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","socialContacts","capImg","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","imageWrap","src","photos","large","alt","profileImage","changeAvatarBtn","target","files","length","savePhoto","descriptionBlock","avatarImage","descriptionWrapper","formData","saveProfile","then","initialValues","Post","item","postText","message","likesInfo","likesCount","maxLengthCreator10","maxLengthCreator","MyPostsFormRedux","Field","component","name","placeholder","validate","requiredField","btn","MyPosts","postsElements","posts","p","id","postsBlock","values","onAddPost","newPostBody","MyPostsContainer","connect","state","newPostText","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter","withAuthReirect"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,aAAe,kCAAkC,gBAAkB,qCAAqC,iBAAmB,sCAAsC,YAAc,iCAAiC,mBAAqB,wCAAwC,UAAY,+BAA+B,UAAY,+BAA+B,cAAgB,mCAAmC,eAAiB,oCAAoC,aAAe,kCAAkC,eAAiB,sC,oBCA1kBD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,IAAM,qBAAqB,SAAW,4B,oBCAhID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,UAAY,0B,sICoD3EC,EAhDgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKxCC,qBAAW,WACTD,EAAUL,EAAMI,UAAU,CAACJ,EAAMI,SAiBnC,OACE,8BACKF,GACH,yBAAKK,UAAWC,IAAQC,WACtB,0BAAMC,QAjBa,kBAAMP,GAAaD,IAiBLK,UAAWC,IAAQG,eAAgBX,EAAMI,QAAU,cAGrFF,GACD,yBAAKK,UAAWC,IAAQC,WACtB,2BAAQG,SAhBS,SAACC,GACtBR,EAAUQ,EAAEC,cAAcC,QAgBdC,OAtBY,WACxBb,GAAaD,GACbF,EAAMiB,aAAab,IAqBPc,WAAW,EACXH,MAAOX,O,kCCSRe,EAHkBC,YAAU,CAACC,KAAM,gBAAjBD,EAxCT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAE7C,OAAO,0BAAMC,SAAUH,EAAcf,UAAWC,IAAQkB,cAEpD,6BACI,wCAECF,GAAS,yBAAKjB,UAAWM,IAAEc,kBAAmBH,IAGnD,6BACI,wCADJ,KACuBI,YAAY,eAAgB,WAAY,GAAIC,MAEnE,6BACI,gDADJ,KAC+BD,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAACC,KAAM,cAEnF,6BACI,qDADJ,KAEqBF,YAAY,yBAA0B,4BAA6B,GAAIG,MAG5F,6BACI,uCADJ,KACsBH,YAAY,cAAe,UAAW,GAAIG,MAIhE,6BACI,uCADJ,KACsBC,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GACpD,OAAO,yBAAKA,IAAKA,EAAK7B,UAAWC,IAAQ6B,gBAErC,2BAAID,GAFD,IAEWR,YAAaQ,EAAK,YAAcA,EAAK,GAAIP,cC9BjES,EAAS,yBAmDTC,EAAc,SAAC,GAAsC,IAArChB,EAAoC,EAApCA,QAASiB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAEpC,OAAO,yBAAKlC,UAAWC,IAAQkB,cAEzBc,GAAW,6BAAK,4BAAQ9B,QAAS+B,GAAjB,SAElB,6BACI,wCADJ,KACuBlB,EAAQmB,UAE/B,6BACI,gDADJ,KAC+BnB,EAAQoB,eAAiB,MAAQ,MAE/DpB,EAAQoB,gBACT,6BACI,qDADJ,KACoCpB,EAAQqB,2BAG5C,6BACI,uCADJ,KACsBrB,EAAQsB,SAE9B,6BACI,uCADJ,KACsBb,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GACpD,OAAO,kBAAC,EAAD,CAASA,IAAKA,EAAKU,aAAcV,EAAKW,aAAcxB,EAAQW,SAASE,WAUlFY,EAAU,SAAC,GAAkC,IAAjCF,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,yBAAKxC,UAAWC,IAAQ6B,gBAAiBS,EAAzC,KAAwD,8BAAOC,KAI3DE,EAtFK,SAACjD,GAAW,IAAD,EAEKC,oBAAS,GAFd,mBAEpBC,EAFoB,KAEVC,EAFU,KAI3B,IAAKH,EAAMuB,QACP,OAAO,kBAAC2B,EAAA,EAAD,MAiBX,OACI,6BACI,yBAAK3C,UAAWC,IAAQ2C,WACpB,yBAAKC,IAAKpD,EAAMuB,QAAQ8B,OAAOC,OAAShB,EAAQiB,IAAI,GAAGhD,UAAWC,IAAQgD,eAC1E,yBAAKjD,UAAWC,IAAQiD,iBACnBzD,EAAMwC,SAAW,2BAAOV,KAAK,OAAOlB,SAnBzB,SAACC,GACrBA,EAAE6C,OAAOC,MAAMC,QACf5D,EAAM6D,UAAUhD,EAAE6C,OAAOC,MAAM,SAoB/B,yBAAKpD,UAAWC,IAAQsD,kBACpB,yBAAKV,IAAKpD,EAAMuB,QAAQ8B,OAAOC,OAAShB,EAAQiB,IAAI,GAAGhD,UAAWC,IAAQuD,cAE1E,yBAAKxD,UAAWC,IAAQwD,oBACpB,4BAAKhE,EAAMuB,QAAQmB,UACnB,kBAAC,EAAD,CAAwBtC,OAAQJ,EAAMI,OACda,aAAcjB,EAAMiB,iBAKlDf,EACI,kBAAC,EAAD,CAAiBqB,QAASvB,EAAMuB,QAASE,SA3BtC,SAACwC,GACdjE,EAAMkE,YAAYD,GAAUE,MAAM,WAC9BhE,GAAY,OAyBuDiE,cAAepE,EAAMuB,UAClF,kBAAC,EAAD,CAAaA,QAASvB,EAAMuB,QAASiB,QAASxC,EAAMwC,QAASC,aAAe,WAAOtC,GAAY,Q,4CC/BlGkE,EAjBF,SAACrE,GAEZ,OACF,6BACI,yBAAKO,UAAWC,IAAQ8D,MAEtB,yBAAKlB,IAAI,yBAAyBG,IAAI,KACtC,uBAAGhD,UAAWC,IAAQ+D,UAAWvE,EAAMwE,SAEvC,yBAAKjE,UAAWC,IAAQiE,WACtB,2BAAG,8BAAOzE,EAAM0E,YAAhB,a,gBCuBFC,EAAqBC,YAAiB,IAmBtCC,EAAmBzD,YAAU,CAACC,KAAM,sBAAjBD,EAjBL,SAACpB,GAEnB,OACE,0BAAMyB,SAAUzB,EAAMsB,cAEpB,kBAACwD,EAAA,EAAD,CAAOC,UAAWhD,IACXiD,KAAK,cACLC,YAAY,qBACZC,SAAU,CAACC,IAAeR,KAGjC,4BAAQpE,UAAWC,IAAQ4E,KAA3B,gBAOSC,EA7CC,SAAArF,GAEd,IAAIsF,EAAgBtF,EAAMuF,MACvBpD,KAAI,SAAAqD,GAAC,OAAI,kBAAC,EAAD,CAAMpD,IAAKoD,EAAEC,GAAIjB,QAASgB,EAAEhB,QAASE,WAAYc,EAAEd,gBAQjE,OACI,yBAAKnE,UAAWC,IAAQkF,YACpB,6BACI,wCACA,kBAACb,EAAD,CAAkBpD,SAVZ,SAACkE,GACf3F,EAAM4F,UAAUD,EAAOE,iBAYnB,yBAAKtF,UAAWC,IAAQ+E,OACnBD,K,QCEEQ,EAHUC,aAtBD,SAACC,GAGvB,MAAO,CACLC,YAAaD,EAAME,YAAYD,YAC/BV,MAAOS,EAAME,YAAYX,UAOF,SAACY,GAE1B,MAAO,CACLP,UAAW,SAACC,GAAkBM,EAASC,YAAqBP,QAOvCE,CAA4CV,GCNtDgB,EAlBC,SAACrG,GACf,OACE,6BACE,kBAAC,EAAD,CAAauB,QAASvB,EAAMuB,QACfiB,QAASxC,EAAMwC,QACfpC,OAAQJ,EAAMI,OACda,aAAcjB,EAAMiB,aACpB4C,UAAW7D,EAAM6D,UACjBK,YAAalE,EAAMkE,cAGhC,kBAAC,EAAD,CAAkBoC,MAAOtG,EAAMsG,U,uBCP/BC,E,yLAGF,IAAIC,EAASC,KAAKzG,MAAM0G,MAAMC,OAAOH,OAEjCA,IAEFA,EAAUC,KAAKzG,MAAM4G,kBAGvBH,KAAKzG,MAAM6G,eAAeL,GAC1BC,KAAKzG,MAAM8G,UAAUN,K,0CAOrBC,KAAKM,mB,yCAIYC,EAAWC,EAAWC,GAElCT,KAAKzG,MAAM0G,MAAMC,OAAOH,QAAUQ,EAAUN,MAAMC,OAAOH,QAC3DC,KAAKM,mB,+BAOR,OAAO,kBAAC,EAAD,iBAAaN,KAAKzG,MAAlB,CACSwC,SAAUiE,KAAKzG,MAAM0G,MAAMC,OAAOH,OAClCjF,QAASkF,KAAKzG,MAAMuB,QACpBnB,OAAQqG,KAAKzG,MAAMI,OACnBa,aAAcwF,KAAKzG,MAAMiB,aACzB4C,UAAW4C,KAAKzG,MAAM6D,iB,GArCXsD,IAAMC,WAuDtBC,sBACbtB,aAdwB,SAACC,GAAD,MAAY,CAEhCzE,QAASyE,EAAME,YAAY3E,QAC3BnB,OAAQ4F,EAAME,YAAY9F,OAC1BwG,iBAAkBZ,EAAMsB,KAAKd,OAC7Be,OAAQvB,EAAMsB,KAAKC,UASC,CAACV,mBAAgBC,cAAW7F,iBAAc4C,cAAWK,kBAC7EsD,IACAC,IAHaJ,CAIbd","file":"static/js/3.80faf2ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrap\":\"ProfileInfo_imageWrap__2-fGe\",\"profileImage\":\"ProfileInfo_profileImage__2Q430\",\"changeAvatarBtn\":\"ProfileInfo_changeAvatarBtn__2SZaM\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__y7byg\",\"avatarImage\":\"ProfileInfo_avatarImage__2fhKw\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__3jUWG\",\"lastVisit\":\"ProfileInfo_lastVisit__Up4pa\",\"statusBar\":\"ProfileInfo_statusBar__36kfQ\",\"statusBarText\":\"ProfileInfo_statusBarText__3kqR9\",\"statusBarInput\":\"ProfileInfo_statusBarInput__3AHqe\",\"contactsForm\":\"ProfileInfo_contactsForm__3Gn4f\",\"socialContacts\":\"ProfileInfo_socialContacts__1loog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1BihO\",\"posts\":\"MyPosts_posts__2EVVJ\",\"btn\":\"MyPosts_btn__37k_9\",\"textArea\":\"MyPosts_textArea__3mEYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36Ymc\",\"postText\":\"Post_postText__2JSLS\",\"likesInfo\":\"Post_likesInfo__3CNjQ\"};","import React, {useState, useEffect} from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)}, [props.status] );\r\n\r\n\r\n\r\n  const activateEditMode = () => setEditMode(!editMode);\r\n  const deativateEditMode = () => {\r\n    setEditMode(!editMode);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n      <div className={classes.statusBar}>\r\n        <span onClick={activateEditMode} className={classes.statusBarText}>{props.status || \"No status\"}</span>\r\n      </div>\r\n      }\r\n      {editMode &&\r\n      <div className={classes.statusBar}>\r\n        <input  onChange={onStatusChange}\r\n                onBlur={deativateEditMode}\r\n                autoFocus={true}\r\n                value={status}\r\n\r\n        />\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport classes from '../ProfileInfo.module.css'\r\nimport e from '../../../Login/Login.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return <form onSubmit={handleSubmit} className={classes.contactsForm}>\r\n\r\n        <div>\r\n            <button>Save</button>\r\n\r\n            {error && <div className={e.formSummaryError}>{error}</div>}\r\n\r\n        </div>\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name...\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional\r\n                skills</b>: {createField(\"Professional skills...\", \"lookingForAJobDescription\", [], Textarea)}\r\n\r\n        </div>\r\n        <div>\r\n            <b>About Me</b>: {createField(\"About me...\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.socialContacts}>\r\n\r\n                <b>{key}</b>:{createField( key, \"contacts.\" + key, [], Input)}\r\n\r\n            </div>\r\n        })}\r\n        </div>\r\n\r\n\r\n    </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\nconst capImg = \"https://bit.ly/2OnFLgf\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then( () => {\r\n            setEditMode(false)\r\n        });\r\n   };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.imageWrap}>\r\n                <img src={props.profile.photos.large || capImg} alt=\"\" className={classes.profileImage}/>\r\n                <div className={classes.changeAvatarBtn}>\r\n                    {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large || capImg} alt=\"\" className={classes.avatarImage}/>\r\n\r\n                <div className={classes.descriptionWrapper}>\r\n                    <h3>{props.profile.fullName}</h3>\r\n                    <ProfileStatusWithHooks status={props.status}\r\n                                            updateStatus={props.updateStatus}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            { editMode\r\n                ? <ProfileDataForm profile={props.profile} onSubmit={onSubmit} initialValues={props.profile}/>\r\n                : <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={ () => {setEditMode(true)} }/> }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    return <div className={classes.contactsForm}>\r\n\r\n        { isOwner && <div><button onClick={goToEditMode}>Edit</button></div> }\r\n\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About Me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n};\r\n\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.socialContacts}>{contactTitle}: <span>{contactValue}</span></div>\r\n};\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n<div>\r\n    <div className={classes.item}>\r\n\r\n      <img src=\"https://bit.ly/2OnFLgf\" alt=\"\"/>\r\n      <p className={classes.postText}>{props.message}</p>\r\n\r\n      <div className={classes.likesInfo}>\r\n        <p><span>{props.likesCount}</span> Like</p>\r\n      </div>\r\n    </div>\r\n</div>\r\n  )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\n\r\nconst MyPosts = props => {\r\n\r\n  let postsElements = props.posts\r\n    .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n  let onAddPost = (values) => {\r\n    props.onAddPost(values.newPostBody);\r\n\r\n  };\r\n\r\n\r\nreturn (\r\n    <div className={classes.postsBlock}>\r\n        <div>\r\n            <h3>My Posts</h3>\r\n            <MyPostsFormRedux onSubmit={onAddPost}/>\r\n        </div>\r\n\r\n        <div className={classes.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n)\r\n};\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n\r\n      <Field component={Textarea}\r\n             name=\"newPostBody\"\r\n             placeholder=\"Enter your post...\"\r\n             validate={[requiredField, maxLengthCreator10]}\r\n      />\r\n\r\n      <button className={classes.btn}>Add Post</button>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nconst MyPostsFormRedux = reduxForm({form: \"postAddMessageForm\"})(MyPostsForm);\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/reducers/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onAddPost: (newPostBody) => { dispatch(addPostActionCreator(newPostBody)) },\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile}\r\n                   isOwner={props.isOwner}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   savePhoto={props.savePhoto}\r\n                   saveProfile={props.saveProfile}\r\n      />\r\n\r\n      <MyPostsContainer store={props.store} />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/reducers/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthReirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if(!userId) {\r\n\r\n      userId =  this.props.authorizedUserId;\r\n\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n     if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n       this.refreshProfile();\r\n     }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n      />\r\n     }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ({\r\n\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.userId,\r\n      isAuth: state.auth.isAuth\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthReirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}